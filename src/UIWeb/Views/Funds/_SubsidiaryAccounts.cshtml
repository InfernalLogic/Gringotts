@using NExtensions
@using PagedList.Mvc
@model Wiz.Gringotts.UIWeb.Models.Funds.FundDetails

<div class="panel panel-default">

    <div class="panel-heading">
        @if (string.IsNullOrWhiteSpace(Model.Pager.Search))
        {
            <span>@Model.Items.TotalItemCount @(Model.Pager.IsActive ? "Active" : "Inactive") Subsidiary Accounts</span>
        }
        else
        {
            <span>
                <a id="clear" class="btn btn-xs btn-danger" href="@Url.Action("Show")#tab-subsidiary-accounts"><span class="fa fa-trash-o"></span> <u>C</u>lear</a>
                @Model.Items.TotalItemCount Search Results For
                "@Html.ActionLink(Model.Pager.Search, "Show", new { isactive = Model.Pager.IsActive.ToString().ToLower(), search = Model.Pager.Search })"
            </span>
        }

        <form action="@Url.Action("Show")#tab-subsidiary-accounts" class="form-inline pull-right" id="account-search" method="get" role="form">

            <label class="sr-only" for="isactive">Is Active</label>
            @Html.CheckBox("isactive", Model.Pager.IsActive,
                new {@class = "form-control input-sm", title = "Show Acti<u>v</u>e Accounts", data_html = true, data_toggle = "tooltip", data_placement = "left"})

            <div class="form-group">
                <div class="input-group">
                    <label class="sr-only" for="search">Subsidiary Account</label>
                    <div class="input-group-addon"><span class="fa fa-user"></span></div>
                    <input class="form-control input-sm" type="text" id="search" name="search" placeholder="alt-s to Search for Account"
                           data-val="true" data-val-regex="Invalid Search" data-val-regex-pattern="^[a-zA-Z0-9\s-]+$"
                           data-val-required="The search is required."/>
                </div>
            </div>
            <button type="submit" class="btn btn-sm btn-primary"><span class="fa fa-search"></span></button>
        </form>
</div>

    <table id="subsidiary-accounts-table" class="table table-responsive table-striped table-hover">
        <thead>
            <tr>
                <th class="col-md-2">Name</th>
                <th class="col-md-2">Bank Account</th>
                <th class="col-md-2">Balance</th>
                <th class="col-md-2">Encumbered</th>
                <th class="col-md-1">Available</th>
                <th class="col-md-3 text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Items.Any())
            {
                for (int i = 0; i < Model.Items.Count; i++)
                {
                    <tr>
                        <td>@Model.Items[i].Name</td>
                        <td>@Model.Items[i].BankNumbers.JoinWithComma()</td>
                        <td>@Html.DisplayFor(m => m.Items[i].Total)</td>
                        <td>@Html.DisplayFor(m => m.Items[i].Encumbered)</td>
                        <td>@Html.DisplayFor(m => m.Items[i].Available)</td>
                        <td>
                            <div class="text-center">
                                <a class="btn btn-xs btn-primary" href="@Url.Action("Show", "Accounts", new {id = Model.Items[i].Id})">Select</a>
                                <a class="btn btn-xs btn-default" href="@Url.Action("Edit", "Accounts", new {id = Model.Items[i].Id})">Edit</a>
                                <a class="btn btn-xs btn-default" id="receipt" href="@Url.Action("Create", "Receipts", new {id = Model.Items[i].Id})">Receipt</a>
                                <a class="btn btn-xs btn-default" id="expense" href="@Url.Action("Create", "Expenses", new {id = Model.Items[i].Id})">Expense</a>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-md-6">
        @Html.PagedListPager(Model.Items, page => Url.Action("Show", new { page }) + "#tab-subsidiary-accounts",
        new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, MaximumPageNumbersToDisplay = 5 })
    </div>
    <div class="col-md-6">
        <div class="pull-right">
            @if (Model.Pager.IsActive) // only show add button if we are viewing active results
            {
                <a class="btn btn-default" id="add" href="@Url.Action("Create", "Accounts", new { id = Model.Fund.Id })"><span class="fa fa-plus"></span> <u>A</u>dd</a>
            }
        </div>
    </div>
</div>