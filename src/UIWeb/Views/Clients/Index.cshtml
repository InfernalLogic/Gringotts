@using Wiz.Gringotts.UIWeb.Models.Accounts
@using Wiz.Gringotts.UIWeb.Models.Features
@using PagedList.Mvc
@model Wiz.Gringotts.UIWeb.Models.Clients.ClientSearchResult

@{
    ViewBag.Title = "Clients";
}

@if (!ViewBag.Features.IsEnabled(Feature.Clients))
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-warning">
                The Clients Feature is currently disabled for @ViewBag.Organization.Name.
            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <h3 class="sub-header">
                Search For Client

                @using (Html.BeginForm("Index", "Clients", FormMethod.Get, new { id = "client-search", role = "form", @class = "form-inline pull-right" }))
                {
                    <label class="sr-only" for="isactive">Is Active</label>
                    @Html.CheckBox("isactive", Model.Pager.IsActive,
                    new { @class = "form-control input-sm", title = "Show Acti<u>v</u>e Clients", data_html = true, data_toggle = "tooltip", data_placement = "left" })

                    <div class="form-group">
                        <div class="input-group">
                            <label class="sr-only" for="search">Client</label>
                            <div class="input-group-addon"><span class="fa fa-user"></span></div>
                            <input class="form-control input-sm" type="text" id="search" name="search" placeholder="alt-s to Search for Client"
                                   data-val="true" data-val-regex="Invalid Search" data-val-regex-pattern="^[a-zA-Z0-9\s-,]+$"
                                   data-val-required="The search is required." />
                        </div>
                    </div>
                    <button type="submit" class="btn btn-sm btn-primary"><span class="fa fa-search"></span></button>
                }
            </h3>

        </div>
    </div>

    <div class="panel panel-default">
        @if (string.IsNullOrWhiteSpace(Model.Pager.Search))
        {
            <div class="panel-heading">@Model.Items.TotalItemCount @(Model.Pager.IsActive ? "Active" : "Inactive") Clients</div>
        }
        else
        {
            <div class="panel-heading">
                @Model.Items.TotalItemCount Client Search Results For
                "@Html.ActionLink(Model.Pager.Search, "Index", new { isactive = Model.Pager.IsActive.ToString().ToLower(), search = Model.Pager.Search })"
                <a id="clear" class="btn btn-xs btn-danger pull-right" href="@Url.Action("Index")"><span class="fa fa-trash-o"></span> <u>C</u>lear</a>
            </div>
        }

        <table id="clients" class="table table-responsive table-striped table-hover">
            <thead>
                <tr>
                    <th class="col-md-4">Name</th>
                    <th class="col-md-4">Identifiers</th>
                    <th class="col-md-4">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Items.Any())
                {
                    foreach (var client in Model.Items)
                    {
                        <tr>
                            <td style="overflow: visible">
                                @if (client.ImageId.HasValue)
                                {
                                    <div class="dropdown">
                                        <div class="dropdown-toggle"><span class="fa fa-info-circle"></span>  @client.DisplayName</div>
                                        <ul class="dropdown-menu">
                                            @if (client.ImageId.HasValue)
                                            {
                                                <li><a href="#"><img src="@Url.Action("Index", "Files", new {id = client.ImageId})" class="img-responsive img-thumbnail center-block" alt="@client.DisplayName" /></a></li>
                                            }
                                        </ul>
                                    </div>
                                }
                                else
                                {
                                    <div>@client.DisplayName</div>
                                }
                            </td>
                            <td class="identifiers">
                                @foreach (var item in client.Identifiers)
                                {
                                    <b>@item.ClientIdentifierType.Name</b>
                                    @item.Display()
                                }
                            </td>
                            <td>
                                <div class="pull-right">
                                    <a class="btn btn-xs btn-primary" href="@Url.Action("Show", new {id = client.Id})">Select</a>
                                    <a class="btn btn-xs btn-default" href="@Url.Action("Edit", new {id = client.Id})">Edit</a>
                                    <div class="btn-group">
                                        <a class="btn btn-xs btn-default" href="@Url.Action("Create", "Receipts", new {id = client.Residencies.First(r => r.OrganizationId == ViewBag.Organization.Id).Accounts.First(a => a.Name.Equals(AccountType.Checking)).Id})">Receipt</a>
                                        <button type="button" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="caret"></span>
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            @foreach (var item in client.Residencies.First(r => r.OrganizationId == ViewBag.Organization.Id).Accounts)
                                            {
                                                <li><a href="@Url.Action("Create", "Receipts", new {id = item.Id})">@item.Name</a></li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="btn-group">
                                        <a class="btn btn-xs btn-default" href="@Url.Action("Create", "Expenses", new {id = client.Residencies.First(r => r.OrganizationId == ViewBag.Organization.Id).Accounts.First(a => a.Name.Equals(AccountType.Checking)).Id})">Expense</a>
                                        <button type="button" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="caret"></span>
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            @foreach (var item in client.Residencies.First(r => r.OrganizationId == ViewBag.Organization.Id).Accounts)
                                            {
                                                <li><a href="@Url.Action("Create", "Expenses", new {id = item.Id})">@item.Name</a></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div class="row">
        <div class="col-md-6">
            @Html.PagedListPager(Model.Items, page => Url.Action("Index", new { page }),
        new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, MaximumPageNumbersToDisplay = 5 })
        </div>
        <div class="col-md-6">
            <div class="pull-right">
                @if (Model.Pager.IsActive && ViewBag.Features.IsEnabled(Feature.Clients)) // only show add button if we are viewing active results
                {
                    <a class="btn btn-default" id="add" href="@Url.Action("Create")"><span class="fa fa-plus"></span> <u>A</u>dd</a>
                }
            </div>
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Modules/client.search.js")
}